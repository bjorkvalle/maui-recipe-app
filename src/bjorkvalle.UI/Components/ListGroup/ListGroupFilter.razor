@namespace bjorkvalle.UI.Components
@inherits UIComponentBase
@typeparam TItem

@if (!NoRender)
{
    <div @attributes="AdditionalAttributes" class="relative flex items-center grow">
        <input type="text" class="input input-sm input-bordered w-full pl-7" @oninput="Filter" placeholder="@Placeholder" />
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 opacity-50 absolute left-2">
            <path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z" clip-rule="evenodd" />
        </svg>
    </div>
}

@code {
    [CascadingParameter] ListGroup<TItem> ListGroup { get; set; }
    [Parameter] public EventCallback<string> OnFilter { get; set; }

    protected override void OnInitialized()
    {
        if (ListGroup == null)
            throw new ArgumentNullException(nameof(ListGroup), $"{nameof(ListGroupFilter<TItem>)} must exist within a (${nameof(ListGroup)})");
    }

    private async Task Filter(ChangeEventArgs args) => await OnFilter.InvokeAsync((string)args.Value);

    public string Placeholder => $"Filter {ListGroup.ItemSize} items..";
}